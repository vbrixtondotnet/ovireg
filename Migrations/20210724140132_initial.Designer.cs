// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineSabong.VirtualGuide;

namespace OnlineSabong.VirtualGuide.Migrations
{
    [DbContext(typeof(SabongDBContext))]
    [Migration("20210724140132_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("OnlineSabong.VirtualGuide.DBModels.FightResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("FightDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FightNo")
                        .HasColumnType("int");

                    b.Property<string>("RingSide")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("FightResults");
                });

            modelBuilder.Entity("OnlineSabong.VirtualGuide.DBModels.Rooster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NoOfFights")
                        .HasColumnType("int");

                    b.Property<int>("Wins")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Roosters");
                });

            modelBuilder.Entity("OnlineSabong.VirtualGuide.DBModels.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LasLoggedIn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("OnlineSabong.VirtualGuide.DBModels.UserLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Device")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Latlong")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LogInDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Timezone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserLogs");
                });

            modelBuilder.Entity("OnlineSabong.VirtualGuide.DBModels.UserRoosters", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Bannered")
                        .HasColumnType("int");

                    b.Property<int>("DarkHackle")
                        .HasColumnType("int");

                    b.Property<int>("DarkLegged")
                        .HasColumnType("int");

                    b.Property<int>("LightHackle")
                        .HasColumnType("int");

                    b.Property<int>("NonBannered")
                        .HasColumnType("int");

                    b.Property<int>("RoosterId")
                        .HasColumnType("int");

                    b.Property<int>("WhiteLegged")
                        .HasColumnType("int");

                    b.Property<int>("YellowLegged")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserRoosters");
                });

            modelBuilder.Entity("OnlineSabong.VirtualGuide.DBModels.FightResult", b =>
                {
                    b.HasOne("OnlineSabong.VirtualGuide.DBModels.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
